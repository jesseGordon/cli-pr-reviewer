name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            binary_name: pr-review-linux
            asset_name: pr-review-linux
          - os: macos-latest
            binary_name: pr-review-macos
            asset_name: pr-review-macos
          - os: windows-latest
            binary_name: pr-review
            asset_name: pr-review-windows.exe

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install UV (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        curl -sSf https://install.slanglabs.dev/uv.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install UV (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        curl.exe -LO https://github.com/astral-sh/uv/releases/latest/download/uv-x86_64-pc-windows-msvc.zip
        tar -xf uv-x86_64-pc-windows-msvc.zip
        echo "$PWD" >> $GITHUB_PATH
    
    - name: Install dependencies (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        uv pip install -e ".[build]"
    
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        uv pip install -e ".[build]"
    
    - name: Build executable (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        uv run pyinstaller --onefile --name "${{ matrix.binary_name }}" --clean --noconfirm --add-data "README.md:." "pr_review.cli:main"
        chmod +x dist/${{ matrix.binary_name }}
    
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        uv run pyinstaller --onefile --name "${{ matrix.binary_name }}" --clean --noconfirm --add-data "README.md;." "pr_review.cli:main"
    
    - name: Test executable (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        ./dist/${{ matrix.binary_name }} --version
    
    - name: Test executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        .\dist\${{ matrix.binary_name }}.exe --version
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: |
          dist/${{ matrix.binary_name }}
          dist/${{ matrix.binary_name }}.exe
        if-no-files-found: ignore

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/pr-review-linux/pr-review-linux
          artifacts/pr-review-macos/pr-review-macos
          artifacts/pr-review-windows.exe/pr-review.exe 